import { Injectable } from '@nestjs/common';
import { Button } from 'src/chatbot/components/button';
import { Context } from 'src/chatbot/conversations/context';
import { NewConversation } from 'src/chatbot/conversations/conversation';
import { Send } from 'src/chatbot/helpers/send';
import { IaService } from './services/ia.service';

@Injectable()
export class AlertConversation extends NewConversation {
  firstStep = 0;

  constructor(
    private readonly iaService: IaService
  ) {
    super();
  }

  steps() {
    return {
      0: {
        action: async ({ message, user }) => {
          if (message.voice) {
            await Send.to(user, 'Escoltant audio...');
            const { text } = await this.iaService.transcribe(message.voice, {
              language: 'ca',
            });
            message.text = text;
          }

          if ( message.image ) {
            await Send.to(user, 'Mirant imatge...');

            Context.set(user, 'alert.images', [{
              id: message.image.file_unique_id || message.image.id, // TODO: make equal telegram and whatsapp image
              url: message.image.url
            }]);

            const response = await this.iaService.watch(message.image.url, `Responde el idioma cuyo codigo ISO es ${Context.get(user, 'user.language') || 'ca'}`);

            if ( response.is_alert ) {
              Context.set(user, 'alert.description', response.description);
              Context.set(user, 'message', [{
                text: [response.description, 'Es correcte?'].join('\n\n'),
                options: {
                  buttons: [
                    Button.create('Sí, és correcte', { image_ok: message.image.file_unique_id || message.image.id }),
                    Button.create('No, no és correcte', { image_error: message.image.file_unique_id || message.image.id }),
                  ],
                }
              }]);
              return 125;
            } else {
              Context.set(user, 'message', [response.description, 'Quina és la incidencia?']);
              return 100;
            }
          }

          if ( message.text && !message.text.startsWith('/') ) {
            const { intent, language } = await this.iaService.deduceIntent(message.text);
            Context.set(user, 'user.language', language);

            if ( intent === 'alert' ) {
              Context.set(user, 'alert.description', message.text);
              return 150;
            }
          }

          if ( message.location ) {
            Context.set(user, 'alert.location', message.location);
            Context.set(user, 'message', 'Hola, ubicació rebuda. Pots descriure la incidencia?');
          }

          return 100;
        }
      },
      100: {
        message: ({ user }) => {
          return Context.get(user, 'message') || 'Hola. Aquest és un xat per a avisar de incidencies de la ciutat de Llíria. Pots descriure la incidencia?';
        },
        action: async ({ message, user }) => {
          Context.delete(user, 'message');

          if ( message.interaction === 'no' ) {
            return Context.get(user, 'alert')?.location ? 200 : 150;
          }

          if (message.voice) {
            await Send.to(user, 'Escoltant audio...');
            const { text } = await this.iaService.transcribe(message.voice, {
              language: 'ca',
            });
            message.text = text;
          }

          if ( message.image ) {
            await Send.to(user, 'Mirant imatge...');

            Context.set(user, 'alert.images', [{
              id: message.image.file_unique_id || message.image.id, // TODO: make equal telegram and whatsapp image
              url: message.image.url
            }]);

            const response = await this.iaService.watch(message.image.url, `Responde el idioma cuyo codigo ISO es ${Context.get(user, 'user.language') || 'ca'}`);

            if ( response.is_alert ) {
              Context.set(user, 'alert.description', response.description);
              Context.set(user, 'message', [{
                text: [response.description, 'Es correcte?'].join('\n\n'),
                options: {
                  buttons: [
                    Button.create('Sí, és correcte', { image_ok: message.image.file_unique_id || message.image.id }),
                    Button.create('No, no és correcte', { image_error: message.image.file_unique_id || message.image.id }),
                  ],
                }
              }]);
              return 125;
            } else {
              Context.set(user, 'message', [response.description, 'Quina és la incidencia?']);
              return 100;
            }
          }

          if (message.text) {
            const { intent, language } = await this.iaService.deduceIntent(message.text);
            Context.set(user, 'user.language', language);

            if ( intent !== 'alert' ) {
              Context.set(user, 'message', ['No entenc el missatge. Aquest és un xat per a avisar de incidencies de la ciutat de Llíria. Si tens algun problema, envia\'m una foto o descriu la incidencia']);
            } else {
              Context.set(user, 'alert.description', message.text);
              Context.set(user, 'message', ['Entenc']);
            }
          }

          if ( message.location ) {
            Context.set(user, 'alert.location', message.location);
            Context.set(user, 'message', ['Ubicació rebuda']);
          }

          const alert = Context.get(user, 'alert');
          if ( alert ) {
            if ( alert.description ) {
              Context.set(user, 'message', [{
                text: 'Si vols, pots afegir alguna informació més',
                options: {
                  buttons: [
                    Button.create('No, açò es tot', 'no'),
                  ],
                }
              }]);
            } else {
              Context.set(user, 'message', [{
                text: 'Envia una foto o descriu la incidencia',
              }]);
            }
          }

          return 100;
        }
      },
      125: {
        message: ({ user }) => {
          return Context.get(user, 'message');
        },
        action: async ({ message, user }) => {
          if ( !message.interaction?.hasOwnProperty('image_ok') && !message.interaction?.hasOwnProperty('image_error') ) {
            await Send.to(user, 'Elegeix una opció');
            return false;
          }

          if ( message.interaction.image_ok ) {
            Context.set(user, 'message', {
              text: 'Gràcies. Pots afegir alguna informació més, si vols',
              options: {
                buttons: [
                  Button.create('No, açò es tot', 'no'),
                ],
              }
            });
          }

          if ( message.interaction.image_error ) {
            Context.delete(user, 'alert.images', message.interaction.image_error);
            Context.set(user, 'message', 'Ho sent, no he entès la imatge. Pots descriure quina es la incidencia?');
          }

          return 100;
        }
      },
      150: {
        message: ({ user }) => {
          return Context.get(user, 'message') || 'Be. On es troba la incidencia? Pots enviar la ubicació si prefereixes';
        },
        action: async ({ message, user }) => {
          if ( !message.location ) {
            Context.set(user, 'message', [{
              text: 'No he entès la teva resposta. Pots enviar la ubicació?',
            }]);
            return 150;
          }

          Context.set(user, 'alert.location', message.location);

          return 200;
        }
      },
      200: {
        message: ({ user }) => {
          console.log(Context.get(user, 'alert'));

          return 'Gràcies per l\'avís. Fique en coneixement al responsable';
        },
      }
    }
  }
}
