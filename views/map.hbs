<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }} - {{#if mapObject.title}}{{ mapObject.title }}{{else}}New map{{/if}}</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap" rel="stylesheet">
    <link rel="icon" type="image/jpg" href="/favicon.ico">
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdn.socket.io/4.7.4/socket.io.min.js"></script>
    <script defer data-domain="mapisy.com" src="https://analytics.juanma.app/js/script.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: "Inter", sans-serif;
            font-optical-sizing: auto;
            font-weight: 500;
            font-style: normal;
        }

        .center-marker {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1000;
            color: red;
            font-weight: bold;
            font-size: 24px;
            pointer-events: none;
        }

        .bottom-right {
            position: absolute;
            bottom: 20px;
            right: 10px;
            z-index: 1000;
            width: 25%;
        }

        .bottom-left {
            position: absolute;
            bottom: 20px;
            left: 10px;
            z-index: 1000;
            width: 25%;
        }

        .card {
            background-color: var(--bs-secondary-bg-subtle);
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
        }

        /* Small screens */
        @media (max-width: 768px) {
            .bottom-right {
                position: fixed;
                width: 100%;
                bottom: 0;
                right: 0;
                z-index: 1000;
            }

            .create-map-form {
                position: absolute;
                bottom: 0;
                left: 0;
                width: 100%;
            }

            #create-map-form-footer {
                background-color: var(--bs-card-cap-bg);
                position: fixed;
                bottom: 0;
                left: 0;
                width: 100%;
                padding: 10px;
            }

            #zoom-container {
                margin-bottom: 50px !important;
            }

            .bottom-left {
                width: 100%;
                bottom: 0;
                left: 0;
                z-index: 999;
            }

            .map-info {
                bottom: 0;
            }

            #create-map-form .card-body {
                display: block;
            }

            #create-map-form .btn {
                width: 100%;
            }
        }
    </style>
</head>
<body style="display: flex; flex-direction: column; height: 100vh;">

    <div id="map" style="width: 100%; height: 100vh;"></div>

    {{#unless map.email}}
        <div class="center-marker">Ã—</div>
    {{/unless}}

    <div class="bottom-right">
        {{#unless map.email}}
            <div id="create-map-form" class="card">
                <div class="card-header">
                    <h6 class="card-title m-0" style="display: none;">Configure map</h6>
                    <button class="btn btn-primary">
                        Configure map
                    </button>
                </div>
                <div class="card-body" style="display: none;max-height: 65vh;overflow-y: auto;">
                    <form id="configForm" method="post">
                        <div class="mb-3">
                            <label for="email">Email <span style="color: red;">*</span></label>
                            <input class="form-control" type="text" name="email" placeholder="Email">
                            <div id="emailHelp" class="form-text">The API key will be sent to this email</div>
                        </div>
                        <div class="mb-3">
                            <label for="title">Title <span style="color: red;">*</span></label>
                            <input class="form-control" type="text" name="title" placeholder="Title">
                        </div>
                        <div class="mb-3">
                            <label for="description">Description</label>
                            <textarea class="form-control" name="description" placeholder="Description"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="latitude">Center <span style="color: red;">*</span></label>
                            <input class="form-control" type="text" name="latitude" placeholder="Latitude">
                            <input class="form-control" type="text" name="longitude" placeholder="Longitude">
                        </div>
                        <div id="zoom-container" class="mb-3">
                            <label for="zoom">Zoom <span style="color: red;">*</span></label>
                            <input class="form-control" type="number" name="zoom" placeholder="Zoom">
                        </div>
                        <div id="create-map-form-footer">
                            <button id="configure-map-button" type="submit" class="btn btn-primary">Configure map</button>
                        </div>
                    </form>
                </div>
            </div>
        {{/unless}}
    </div>

    <div class="bottom-left">
        {{#if map.email}}
            <div class="map-info card">
                <div class="card-body">
                    <h1 style="margin: 0;font-size: 1.5rem;" id="map-title">{{{ map.title }}}</h1>
                    {{#if map.description}}
                        <p id="map-description" style="margin: 10px 0 0;">{{{ map.description }}}</p>
                    {{/if}}
                    <div style="display: flex; justify-content: flex-end;margin-top: 30px;">
                        <small>Made with <a href="{{baseUrl}}">{{title}}</a></small>
                    </div>
                </div>
            </div>
        {{/if}}
    </div>

    <script type="module">
        document.addEventListener('DOMContentLoaded', function() {
            var map = L.map('map', {
                center: [0, 0],
                zoom: 1,
            });

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                maxZoom: 19
            }).addTo(map);

            if (window.location.search.includes('landing')) {
                document.querySelector('.map-info').style.display = 'none';
            }

            // if screen is small, make create-map-form hidable clicking and sliding de header
            function toggleCardBody() {
                if (window.innerWidth < 768) {
                    document.querySelector('.card-header')?.addEventListener('click', () => {
                        const cardBody = document.querySelector('.card-body');
                        if ( cardBody.style.display === 'none' ) {
                            cardBody.style.display = 'block';
                            document.querySelector('.btn').style.display = 'none';
                            document.querySelector('.card-title').style.display = 'block';
                        } else {
                            cardBody.style.display = 'none';
                            document.querySelector('.btn').style.display = 'block';
                            document.querySelector('.card-title').style.display = 'none';
                        }
                    });
                    // hide card body on map click
                    map.on('click', () => {
                        document.querySelector('.card-body').style.display = 'none';
                        document.querySelector('.btn').style.display = 'block';
                        document.querySelector('.card-title').style.display = 'none';
                    });

                    // hide card body on map move
                    map.on('moveend', () => {
                        document.querySelector('.card-body').style.display = 'none';
                        //document.querySelector('.btn').style.display = 'block';
                        //document.querySelector('.card-title').style.display = 'none';
                    });

                    //document.querySelector('.map-info').style.display = 'none';
                } else {
                    //document.querySelector('.card-body').style.display = 'block';
                    //document.querySelector('#create-map-form .card-title').style.display = 'block';
                    //document.querySelector('#create-map-form .btn').style.display = 'none';

                    //document.querySelector('.map-info').style.display = 'block';
                }
            }

            toggleCardBody();
            window.addEventListener('resize', toggleCardBody);

            const userMap = {{{ mapObject }}};

            function connectSocket() {
                socket = io();

                socket.on('marker:created', function({ marker }) {
                    if (marker.map_id !== userMap.id) return;

                    L.marker([parseFloat(marker.latitude), parseFloat(marker.longitude)], {
                        id: marker._id.toString()
                    })
                    .bindPopup(marker.title || marker._id)
                    .on('click', function(e) {
                        this.openPopup(); // Muestra el popup al clicar
                        navigator.clipboard.writeText(marker._id.toString());
                    })
                    .addTo(map)
                    .openPopup(); // Abre el popup por defecto

                    markers.push(marker);
                });

                socket.on('marker:deleted', function({ marker }) {
                    if (marker.map_id !== userMap.id) return;

                    map.eachLayer(function(layer) {
                        if (layer instanceof L.Marker && layer.options.id === marker._id.toString()) {
                            map.removeLayer(layer);
                        }
                    });
                });

                socket.on('map:updated', function({ map: currentMap }) {
                    if (currentMap.id !== userMap.id) return;

                    map.setView([currentMap.latitude, currentMap.longitude], currentMap.zoom);
                    document.getElementById('map-title').textContent = currentMap.title;
                    document.getElementById('map-description').textContent = currentMap.description;
                    document.getElementById('map-description').style.display = currentMap.description ? 'block' : 'none';
                });

                socket.on('connect_error', (error) => {
                    console.error('Error de conexiÃ³n:', error);
                });
            }

            let markers = [];
            let socket;


            //document.getElementById('configForm').setAttribute('action', `/${userMap.id}`);

            map.setView([userMap.latitude, userMap.longitude], userMap.zoom);

            if (!userMap.new) {
                if (userMap.title !== 'Demo') {
                    document.getElementById('created-by').style.display = 'flex';
                }
            }

            if (!userMap.email) {
                //const lat = document.querySelector('[name="latitude"]').value || '0';
                //const lng = document.querySelector('[name="longitude"]').value || '0';
            }

            userMap.markers.forEach(marker => {
                L.marker([parseFloat(marker.latitude), parseFloat(marker.longitude)])
                    .bindPopup(marker.title || marker._id)
                    .on('click', function(e) {
                        this.openPopup(); // Muestra el popup al clicar
                        navigator.clipboard.writeText(marker._id.toString());
                    })
                .addTo(map);
            });

            connectSocket();

            document.querySelector('[name="zoom"]')?.addEventListener('change', (e) => {
                const newZoom = parseInt(e.target.value);
                if (!isNaN(newZoom)) {
                    const limitedZoom = Math.min(Math.max(newZoom, 0), 19);
                    e.target.value = limitedZoom;
                    map.setZoom(limitedZoom);
                }
            });

            map.on('zoom', function() {
                document.querySelector('[name="zoom"]').value = parseInt(map.getZoom().toFixed(0));
            });

            map.on('moveend', function() {
                const center = map.getCenter();
                document.querySelector('[name="latitude"]').value = center.lat.toFixed(6);
                document.querySelector('[name="longitude"]').value = center.lng.toFixed(6);
            });

            document.querySelector('[name="title"]')?.addEventListener('input', (e) => {
                document.querySelector('.map-info').style.display = e.target.value ? 'block' : 'none';
                document.getElementById('map-title').textContent = e.target.value;
                document.getElementById('map-description').textContent = document.querySelector('[name="description"]').value;
            });

            document.querySelector('[name="description"]')?.addEventListener('input', (e) => {
                document.querySelector('.map-info').style.display = e.target.value ? 'block' : 'none';
                document.getElementById('map-description').style.display = e.target.value ? 'block' : 'none';
                document.getElementById('map-description').textContent = e.target.value;
            });

            const urlParams = new URLSearchParams(window.location.search);
            const message = urlParams.get('message');
            if (message) {
                const toast = document.createElement('div');
                toast.className = 'toast';
                toast.textContent = message;
                toast.style.backgroundColor = '#a04848';
                toast.style.color = 'var(--text)';
                toast.style.padding = '10px';
                toast.style.borderRadius = '5px';
                toast.style.position = 'absolute';
                toast.style.bottom = '10px';
                toast.style.right = '10px';
                toast.style.zIndex = '1000';
                toast.style.width = '50%';
                //document.querySelector('.key-message').appendChild(toast);
                setTimeout(() => {
                    toast.remove();
                }, 3000);
            }
        });
    </script>
</body>
</html>
